@model X.PagedList.IPagedList<LearnEDU.Models.Student>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Danh sách học sinh";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="mb-4">Danh sách học sinh</h2>

<form asp-action="All" method="get" class="mb-3">
    <div class="row g-2">
        <div class="col-md-3">
            <input type="text" name="name" value="@(Context.Request.Query["name"])" class="form-control" placeholder="Tìm theo tên" />
        </div>
        <div class="col-md-3">
            <input type="text" name="username" value="@(Context.Request.Query["username"])" class="form-control" placeholder="Tìm theo tên đăng nhập" />
        </div>
        <div class="col-md-3">
            <input type="text" name="email" value="@(Context.Request.Query["email"])" class="form-control" placeholder="Tìm theo email" />
        </div>
        <div class="col-md-3">
            <input type="text" name="phone" value="@(Context.Request.Query["phone"])" class="form-control" placeholder="Tìm theo SĐT" />
        </div>
        <div class="col-md-3">
            <select name="gender" class="form-control">
                <option value="" selected="@(string.IsNullOrEmpty(Context.Request.Query["gender"]))">-- Giới tính --</option>
                <option value="Nam" selected="@(Context.Request.Query["gender"] == "Nam")">Nam</option>
                <option value="Nữ" selected="@(Context.Request.Query["gender"] == "Nữ")">Nữ</option>
            </select>
        </div>
        <div class="col-md-3">
            <input type="text" name="education" value="@(Context.Request.Query["education"])" class="form-control" placeholder="Tìm theo trường học" />
        </div>
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-dark">Tìm kiếm</button>
        <a asp-action="All" class="btn btn-secondary">Đặt lại</a>
    </div>
</form>

<div class="d-flex justify-content-end mb-3">
    <a asp-action="Add" class="btn btn-dark"> 
        Thêm học sinh
    </a>
</div>

<table class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr>
            <th>Tên đăng nhập</th>
            <th>Họ tên</th>
            <th>Email</th>
            <th>Số điện thoại</th>
            <th>Giới tính</th>
            <th>Tác vụ</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model)
        {
            <tr>
                <td>@student.Username</td>
                <td>@student.FirstName @student.LastName</td> 
                <td>@student.Email</td>
                <td>@student.Phone</td>
                <td>@student.Gender</td>
                <td>
                    <a class="btn btn-secondary btn-sm" href="@Url.Action("Details", "Student", new { id = student.Id })">Chi tiết</a>
                    <a class="btn btn-danger btn-sm" href="@Url.Action("Delete", "Student", new { id = student.Id })"
                       onclick="return confirm('Bạn có chắc muốn xóa người dùng này không?');">
                        Xoá
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="d-flex justify-content-center">
    @Html.PagedListPager(
            Model,
            page => Url.Action("All", new
            {
                page,
                name = Context.Request.Query["name"],
                username = Context.Request.Query["username"],
                email = Context.Request.Query["email"],
                phone = Context.Request.Query["phone"],
                gender = Context.Request.Query["gender"],
                education = Context.Request.Query["education"]
            }),
            new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        MaximumPageNumbersToDisplay = 5
    }
            )
</div>
